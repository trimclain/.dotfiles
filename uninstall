#!/usr/bin/env python3

import os
from pathlib import Path
from shutil import which
import subprocess

STOW_FOLDERS = [
    "bin",
    "bash",
    "i3",
    "awesome",
    "polybar",
    "nvim",
    "chtsh",
    "tmux",
    "vim",
    "zsh",
    "kitty",
    "alacritty",
    "rofi",
    "picom",
    "lf",
    "stylua",
    "xorg"
]

STOW_CONFIGS = [
    "",
    ".bashrc",
    ".config/i3",
    ".config/awesome",
    ".config/polybar",
    ".config/nvim",
    "",
    ".tmux.conf",
    ".vimrc",
    ".zshrc",
    ".config/kitty",
    ".config/alacritty",
    ".config/rofi",
    ".config/picom",
    ".config/lf",
    ".config/.stylua.toml",
    ".xprofile",
]

STOW_DICT = dict(zip(STOW_FOLDERS, STOW_CONFIGS))
NO_CONFIG_FOLDERS = [
    STOW_FOLDERS[i] for i in range(len(STOW_FOLDERS)) if not STOW_CONFIGS[i]
]


def is_tool(name):
    """Check whether `name` is in PATH and marked as executable."""
    return which(name) is not None


def main():
    did_smth = False
    for folder, config in STOW_DICT.items():
        configpath = os.path.join(Path.home(), config)
        # check if file/folder exists and is a symlink
        if os.path.islink(configpath):
            if is_tool("stow"):
                subprocess.run(["stow", "-vD", folder])
            else:
                subprocess.run(["rm", "-r", configpath])
                print("Removing symlink to", folder)
            did_smth = True
    # bin and chtsh (have to use stow)
    if is_tool("stow"):
        for folder in NO_CONFIG_FOLDERS:
            subprocess.run(["stow", "-vD", folder])
    if not did_smth:
        print("There are no jobs")


if __name__ == "__main__":
    main()
