#!/usr/bin/env bash

###############################################################################
# Brightness Control
#
# Description: Update brightness and get notifications about it
# Dependencies: notify-send, brightnessctl or xrandr (only for Xorg)
###############################################################################

ensure_installed() {
    if ! command -v "$1" > /dev/null; then
        echo "Error: $1 not found"
        exit 1
    fi
}

notify() {
    if command -v dunstify > /dev/null; then
        dunstify -a "brightness-control" -r 5555 -u low -h int:value:"$1" -t 1500 "$2 Brightness: ${1}%"
    else
        notify-send "$2 ${1}%" -t 350
    fi
}

send_notification() {
    if  [ "$2" = "increase" ] || [ "$2" = "full" ] || [ "$2" = "half" ]; then
        notify "$1" "ðŸ”† "
    elif [ "$2" = "decrease" ] || [ "$2" = "zero" ]; then
        notify "$1" "ðŸ”… "
    else
        notify-send  'Brightness Control' 'Error: something went wrong' -t 3000 -u critical
    fi
}

main() {
    ensure_installed notify-send

    mode="unknown"

    if command -v brightnessctl > /dev/null; then

        # TODO: it's possible to get the permission error - cover it:
        # https://github.com/Hummer12007/brightnessctl?tab=readme-ov-file#permissions
        if [ "$1" = "--increase" ]; then
            mode="increase"
            brightnessctl s +10% -q
        elif [ "$1" = "--decrease" ]; then
            mode="decrease"
            brightnessctl s 10%- -q
        elif [ "$1" = "--full" ]; then
            mode="full"
            brightnessctl s 100% -q
        elif [ "$1" = "--zero" ]; then
            mode="zero"
            brightnessctl s 0% -q
        elif [ "$1" = "--half" ]; then
            mode="half"
            brightnessctl s 50% -q
        fi

        output=$(brightnessctl g -P)

    elif [[ -z $WAYLAND_DISPLAY ]]; then
        ####### use xrandr if on xorg and no brightnessctl found #######
        ensure_installed xrandr
        ensure_installed notify-send

        # get info from xrandr
        connectedOutputs=$(xrandr | awk '$2 == "connected"{print $1}')
        # activeOutput=$(xrandr | grep -E " connected (primary )?[1-9]+" | sed -e "s/\([A-Z0-9]\+\) connected.*/\1/")

        monitors=()
        for display in $connectedOutputs; do
            monitors+=("$display")
        done

        intern=${monitors[0]}

        current=$(xrandr --verbose | awk '/Brightness/ { print $2; exit }')
        new="$current"
        if [ "$1" = "--increase" ]; then
            mode="increase"
            new=$(awk "BEGIN {print $current+0.1}")
            # don't got out of range
            if [[ $new == 1.1 ]]; then
                # still show current even if out of range
                output=$(awk "BEGIN {print $current*100}")
                notify "$output" "ðŸ”† "
                exit 0
            fi

        elif [ "$1" = "--decrease" ]; then
            mode="decrease"
            new=$(awk "BEGIN {print $current-0.1}")

            # don't got out of range, but allow 0
            if [[ $new == -0.1 ]]; then
                # still show current even if out of range
                output=$(awk "BEGIN {print $current*100}")
                notify "$output" "ðŸ”… "
                exit 0
            fi
        elif [ "$1" = "--full" ]; then
            mode="full"
            new=1
        elif [ "$1" = "--zero" ]; then
            mode="zero"
            new=0
        elif [ "$1" = "--half" ]; then
            mode="half"
            new=0.5
        fi

        # Set Brightness
        xrandr --output "$intern" --brightness "$new"

        output=$(awk "BEGIN {print $new*100}")
    fi

    # Write new brightness to a file so it can be read less resource intensive
    echo "$output%" > ~/.actual_brightness
    send_notification "$output" "$mode"
}

main "$@"
